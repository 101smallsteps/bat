version: "3"
services:
  bat_backend:
    restart: always
#    network_mode: "host"
    command: gunicorn core.wsgi:application --bind 0.0.0.0:8000
    build:
      context: ./backend
      dockerfile: Dockerfile.prod
    env_file:
      - ./.env.staging
    expose:
      - 8000
#    ports:
#      - 8080:8000
    volumes:
    - static_volume:/home/app/web/staticfiles
    - media_volume:/home/app/web/mediafiles
    depends_on:
      - fin_db_server

  fin_db_server:
    restart: always
    build: ./postgres
#    image: postgres:15
    volumes:
      - postgresql_data:/var/lib/postgresql/data
    env_file:
      - ./.env.db.staging
    ports:
      - 5432:5432

  pgadmin:
    image: dpage/pgadmin4
    ports:
      - "5050:5050"

  nginx-proxy:
    image: jwilder/nginx-proxy
    container_name: nginx-proxy
    restart: always
    ports:
      - 443:443
      - 80:80
    volumes:
      - static_volume:/home/app/web/staticfiles
      - media_volume:/home/app/web/mediafiles
      - certs:/etc/nginx/certs
      - html:/usr/share/nginx/html
      - vhost:/etc/nginx/vhost.d
      - /var/run/docker.sock:/tmp/docker.sock:ro
      - ./custom.conf:/etc/nginx/conf.d/custom.conf
    labels:
      com.github.jrcs.letsencrypt_nginx_proxy_companion.nginx_proxy: "true"
    depends_on:
      - bat_backend

  acme-companion:
    image: nginxproxy/acme-companion
    env_file:
      - ./.env.staging.proxy-companion
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - certs:/etc/nginx/certs
      - html:/usr/share/nginx/html
      - vhost:/etc/nginx/vhost.d
      - acme:/etc/acme.sh
    depends_on:
      - nginx-proxy

volumes:
  static_volume:
  postgresql_data:
  media_volume:
  certs:
  html:
  vhost:
  acme: