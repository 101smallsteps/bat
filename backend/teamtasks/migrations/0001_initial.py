# Generated by Django 4.2 on 2024-10-11 23:26

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('financials', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('certification', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Job',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('description', models.TextField()),
                ('responsibilities', models.TextField()),
                ('designation', models.CharField(blank=True, choices=[('Analyst', 'Analyst'), ('Program Manager', 'Program Manager'), ('Resarcher', 'Resarcher')], max_length=50, null=True)),
                ('designation_level', models.CharField(blank=True, choices=[('Beginner', 'Beginner'), ('Intermediate', 'Intermediate'), ('Advanced', 'Advanced')], max_length=20, null=True)),
                ('prerequisites', models.ManyToManyField(related_name='jobs', to='certification.certificatetype')),
            ],
        ),
        migrations.CreateModel(
            name='Project',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('description', models.TextField()),
                ('start_date', models.DateField()),
                ('end_date', models.DateField(blank=True, null=True)),
                ('project_type', models.CharField(choices=[('shortTerm', 'Short Term'), ('longTerm', 'Long Term'), ('continuous', 'Continuous')], max_length=15)),
                ('users', models.ManyToManyField(related_name='projects', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='RegisteredInstitution',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('address', models.TextField()),
                ('country', models.CharField(max_length=100)),
                ('zipcode', models.CharField(max_length=10)),
                ('is_college', models.BooleanField(default=False)),
                ('is_school', models.BooleanField(default=False)),
                ('is_organisation', models.BooleanField(default=False)),
                ('website', models.URLField(blank=True, max_length=255, null=True)),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Task',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('description', models.TextField()),
                ('completed', models.BooleanField(default=False)),
                ('priority', models.CharField(choices=[('low', 'Low'), ('medium', 'Medium'), ('high', 'High')], default='medium', max_length=10)),
                ('task_type', models.CharField(choices=[('sequential', 'Sequential'), ('parallel', 'Parallel'), ('out_of_order', 'Out of Order')], default='sequential', max_length=20)),
                ('expected_completed_date', models.DateField(blank=True, null=True)),
                ('expected_outcome', models.TextField(blank=True, null=True)),
                ('task_status', models.CharField(choices=[('created', 'Created'), ('started', 'Started'), ('completed', 'Completed'), ('accepted', 'Accepted'), ('closed', 'Closed')], default='created', max_length=20)),
                ('rating', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5')], default=0)),
                ('rating_summary', models.TextField(blank=True, null=True)),
                ('completion_summary', models.TextField(blank=True, null=True)),
                ('completion_evidence', models.ImageField(blank=True, null=True, upload_to='task_evidence/')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('started_at', models.DateTimeField(blank=True, null=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('accepted_at', models.DateTimeField(blank=True, null=True)),
                ('closed_at', models.DateTimeField(blank=True, null=True)),
                ('assigned_to', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('previous_task', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='next_tasks', to='teamtasks.task')),
            ],
        ),
        migrations.CreateModel(
            name='UserDetails',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('institution_name', models.CharField(max_length=255)),
                ('home_address', models.TextField()),
                ('home_state', models.CharField(max_length=100)),
                ('home_county', models.CharField(max_length=100)),
                ('home_country', models.CharField(max_length=100)),
                ('home_zipcode', models.CharField(max_length=10)),
                ('institution_address', models.TextField()),
                ('institution_state', models.CharField(max_length=100)),
                ('institution_county', models.CharField(max_length=100)),
                ('institution_country', models.CharField(max_length=100)),
                ('institution_zipcode', models.CharField(max_length=10)),
                ('email', models.EmailField(max_length=254)),
                ('phone', models.CharField(max_length=15)),
                ('approved_at', models.DateTimeField(blank=True, null=True)),
                ('current_designation', models.CharField(blank=True, choices=[('Analyst', 'Analyst'), ('Program Manager', 'Program Manager'), ('Resarcher', 'Resarcher')], max_length=50, null=True)),
                ('current_designation_level', models.CharField(blank=True, choices=[('Beginner', 'Beginner'), ('Intermediate', 'Intermediate'), ('Advanced', 'Advanced')], max_length=20, null=True)),
                ('designation_started', models.DateField(blank=True, null=True)),
                ('symbol', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='financials.symbol')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Team',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('team_type', models.CharField(choices=[('BatAdminNational', 'BatAdminNational'), ('BatAdminState', 'BatAdminState'), ('BatAdminDistrict', 'BatAdminDistrict'), ('BatAdminCounty', 'BatAdminCounty'), ('BatAnalyst', 'BatAnalyst'), ('BatAmbassador', 'BatAmbassador'), ('Club', 'Club')], max_length=20)),
                ('is_institution', models.BooleanField(default=False)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('closed_on', models.DateTimeField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=False)),
                ('institution', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='teams', to='teamtasks.registeredinstitution')),
                ('leaders', models.ManyToManyField(related_name='leading_teams', to=settings.AUTH_USER_MODEL)),
                ('members', models.ManyToManyField(related_name='member_teams', to=settings.AUTH_USER_MODEL)),
                ('projects', models.ManyToManyField(related_name='teams', to='teamtasks.project')),
            ],
        ),
        migrations.CreateModel(
            name='TaskList',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('type', models.CharField(choices=[('shortTerm', 'Short Term'), ('longTerm', 'Long Term'), ('continuous', 'Continuous')], max_length=15)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField(blank=True, null=True)),
                ('status', models.CharField(choices=[('created', 'Created'), ('started', 'Started'), ('stopped', 'Stopped'), ('completed', 'Completed'), ('closed', 'Closed')], default='created', max_length=10)),
                ('rating', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5')], default=0)),
                ('rating_summary', models.TextField(blank=True, null=True)),
                ('owners', models.ManyToManyField(related_name='owned_tasklists', to=settings.AUTH_USER_MODEL)),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tasklists', to='teamtasks.project')),
            ],
        ),
        migrations.CreateModel(
            name='TaskComment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('comment', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('task', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='teamtasks.task')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='task',
            name='subtask_list',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='parent_task', to='teamtasks.tasklist'),
        ),
        migrations.AddField(
            model_name='task',
            name='task_list',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tasks', to='teamtasks.tasklist'),
        ),
        migrations.CreateModel(
            name='StaffApplication',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('institution_name', models.CharField(max_length=255)),
                ('home_address', models.TextField()),
                ('home_state', models.CharField(max_length=100)),
                ('home_county', models.CharField(max_length=100)),
                ('home_country', models.CharField(max_length=100)),
                ('home_zipcode', models.CharField(max_length=10)),
                ('institution_address', models.TextField()),
                ('institution_state', models.CharField(max_length=100)),
                ('institution_county', models.CharField(max_length=100)),
                ('institution_country', models.CharField(max_length=100)),
                ('institution_zipcode', models.CharField(max_length=10)),
                ('email', models.EmailField(max_length=254)),
                ('phone', models.CharField(max_length=15)),
                ('approved', models.BooleanField(default=False)),
                ('generated_at', models.DateTimeField(auto_now_add=True)),
                ('approved_at', models.DateTimeField(blank=True, null=True)),
                ('confirmation_id', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('job', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='teamtasks.job')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='job',
            name='project',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='jobs', to='teamtasks.project'),
        ),
        migrations.CreateModel(
            name='DesignationHistory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('designation', models.CharField(choices=[('Analyst', 'Analyst'), ('Program Manager', 'Program Manager'), ('Resarcher', 'Resarcher')], max_length=50)),
                ('designation_level', models.CharField(choices=[('Beginner', 'Beginner'), ('Intermediate', 'Intermediate'), ('Advanced', 'Advanced')], max_length=20)),
                ('designation_started', models.DateField(default=django.utils.timezone.now)),
                ('designation_ended', models.DateField(blank=True, null=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='designation_history', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-designation_started'],
            },
        ),
        migrations.CreateModel(
            name='Contribution',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('submitted_at', models.DateTimeField(auto_now_add=True)),
                ('task', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='teamtasks.task')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
